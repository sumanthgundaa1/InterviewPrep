import java.util.*;
public class PostOrderSuccessor{
    
    public class Node {
        Node left;
        Node right;
        int data;
         
        public Node(int data) {
            this.data = data;
            this.left = null;
            this.right = null;
        }
    }
    
    Node root = null;
    ArrayList<Integer> postOrder = new ArrayList<Integer>();
    
    public void insert(int data) {
        root = insertRecursive(root, data);
    }
    
    public Node insertRecursive(Node root, int data) {
        if(root == null) {
            root = new Node(data);
            return root;
        }
        
        if(data < root.data) {
            root.left = insertRecursive(root.left, data);
        } 
        else if(data > root.data) {
            root.right = insertRecursive(root.right, data);
        }
        return root;
    }
    
    
    public int postOrderSuccessor(int target) {
        List<Integer> result = postOrderRecursive(root);
        int index = result.indexOf(target);
        return result.get(index + 1);
    }
    
    public List<Integer> postOrderRecursive(Node root) {
        if(root != null) {
            postOrderRecursive(root.left);
            postOrderRecursive(root.right);
            System.out.print(" " + root.data);
            postOrder.add(root.data);
        }
        return postOrder;  
    }

     public static void main(String []args){
        PostOrderSuccessor tree = new PostOrderSuccessor(); 
  
        /* Let us create following BST 
              50 
           /     \ 
          30      70 
         /  \    /  \ 
       20   40  60   80 */
        tree.insert(50); 
        tree.insert(30); 
        tree.insert(20); 
        tree.insert(40); 
        tree.insert(70); 
        tree.insert(60); 
        tree.insert(80); 
        System.out.println();
        System.out.println(tree.postOrderSuccessor(60));
     }
}